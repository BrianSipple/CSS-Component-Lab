@charset "UTF-8";
/*! HTML5 Boilerplate v5.0.0 | MIT License | http://h5bp.com/ */
/*
 * What follows is the result of much research on cross-browser styling.
 * Credit left inline and big thanks to Nicolas Gallagher, Jonathan Neal,
 * Kroc Camen, and the H5BP dev community and team.
 */
/* ==========================================================================
   Base styles: opinionated defaults
   ========================================================================== */
html {
  color: #222;
  font-size: 1em;
  line-height: 1.4; }

/*
 * Remove text-shadow in selection highlight:
 * https://twitter.com/miketaylr/status/12228805301
 *
 * These selection rule sets have to be separate.
 * Customize the background color to match your design.
 */
::-moz-selection {
  background: #b3d4fc;
  text-shadow: none; }

::selection {
  background: #b3d4fc;
  text-shadow: none; }

/*
 * A better looking default horizontal rule
 */
hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0; }

/*
 * Remove the gap between audio, canvas, iframes,
 * images, videos and the bottom of their containers:
 * https://github.com/h5bp/html5-boilerplate/issues/440
 */
audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle; }

/*
 * Remove default fieldset styles.
 */
fieldset {
  border: 0;
  margin: 0;
  padding: 0; }

/*
 * Allow only vertical resizing of textareas.
 */
textarea {
  resize: vertical; }

/*
 * Catch-all for preventing accidental overflow of these elements
 */
img, object, embed, video {
  max-width: 100%; }

/**
 * Min-width and min-height for tap-targets
 */
nav, a, button {
  width: 48px;
  min-width: 48px;
  height: 48px;
  min-height: 48px; }

/* ==========================================================================
   Browser Upgrade Prompt
   ========================================================================== */
.browserupgrade {
  margin: 0.2em 0;
  background: #ccc;
  color: #000;
  padding: 0.2em 0; }

/* ==========================================================================
   Author's custom styles
   ========================================================================== */
/* ---------------------- Theme colors ---------------------- */
/* ----------------------- Font colors and sizes ---------------------- */
/* White text on dark backgrounds */
/* Dark text on light backgrounds */
/* Base element styles */
/**
 * Use with every animation and transition so we can have a
 * global animation speed toggler (i.e., for visual UI testing)
 */
/*
 * Easing functions
 */
[class^="page__section"] {
  width: 100%;
  display: flex;
  flex-direction: column;
  height: 100vh; }

/**
 * Attribute API for declarative flexbox styling
 */
[layout] {
  width: 100%;
  display: flex; }

[layout="horizontal"],
[layout="row"] {
  flex-direction: row; }

[layout="vertical"],
[layout="column"] {
  flex-direction: column; }

[layout-align="space-around"] {
  justify-content: space-around; }

[layout-align="space-between"] {
  justify-content: space-between; }

[layout-align="center"] {
  justify-content: center; }

[layout-align="start"] {
  justify-content: flex-start; }

[layout-align="end"] {
  justify-content: flex-end; }

html,
body {
  width: 100%;
  min-height: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  margin: 0;
  padding: 0;
  overflow: hidden;
  font-size: 16px;
  background-color: whitesmoke; }

.main-view-container {
  position: relative;
  width: 100vw;
  height: 100%;
  overflow-y: scroll;
  overflow-x: hidden; }

/* Wrapper for a block of content */
.content {
  margin: 0 auto;
  text-align: center;
  width: 80%; }

/* ==========================================================================
   Helper classes
   ========================================================================== */
/*
 * Hide visually and from screen readers:
 * http://juicystudio.com/article/screen-readers-display-none.php
 */
.hidden {
  display: none !important;
  visibility: hidden; }

/*
 * Hide only visually, but have it available for screen readers:
 * http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 */
.visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; }

/*
 * Extends the .visuallyhidden class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */
.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  width: auto; }

/*
 * Hide visually and from screen readers, but maintain layout
 */
.invisible {
  visibility: hidden; }

/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */
.clearfix:before,
.clearfix:after {
  content: " ";
  /* 1 */
  display: table;
  /* 2 */ }

.clearfix:after {
  clear: both; }

/* ==========================================================================
   EXAMPLE Media Queries for Responsive Design.
   These examples override the primary ('mobile first') styles.
   Modify as content requires.
   ========================================================================== */
@media only screen and (min-width: 35em) {
  /* Style adjustments for viewports that meet the condition */ }
@media print, (-o-min-device-pixel-ratio: 5 / 4), (-webkit-min-device-pixel-ratio: 1.25), (min-resolution: 120dpi) {
  /* Style adjustments for high resolution devices */ }
/* ==========================================================================
   Print styles.
   Inlined to avoid the additional HTTP request:
   http://www.phpied.com/delay-loading-your-print-css/
   ========================================================================== */
@media print {
  *,
  *:before,
  *:after {
    background: transparent !important;
    color: #000 !important;
    /* Black prints faster:
                                      http://www.sanbeiji.com/archives/953 */
    box-shadow: none !important;
    text-shadow: none !important; }

  a,
  a:visited {
    text-decoration: underline; }

  a[href]:after {
    content: " (" attr(href) ")"; }

  abbr[title]:after {
    content: " (" attr(title) ")"; }

  /*
   * Don't show links that are fragment identifiers,
   * or use the `javascript:` pseudo protocol
   */
  a[href^="#"]:after,
  a[href^="javascript:"]:after {
    content: ""; }

  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid; }

  /*
   * Printing Tables:
   * http://css-discuss.incutio.com/wiki/Printing_Tables
   */
  thead {
    display: table-header-group; }

  tr,
  img {
    page-break-inside: avoid; }

  img {
    max-width: 100% !important; }

  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3; }

  h2,
  h3 {
    page-break-after: avoid; } }
[class^="striped-box"] {
  margin: 2em auto;
  width: 25em;
  height: 16em;
  background-image: linear-gradient(#00f6ff 50%, #ffea00 0%);
  /* that if we set the second color’s position at 0, its position will be adjusted by the browser to be equal to the position of the previous color stop. */
  /**
   * This technique allows us to create stripes that share the same primary color, but
   * just use a different hue. We just set one color -- the darker color -- one the
   * background-color, then set the gradient to be stripes of semi-transparent white.
   *
   * We can now change the color in only one place. We also get the added beneit of our base
   * color functioning as a fallback color for browsers that don’t support CSS gradients.
   *
   */ }
  [class^="striped-box"][class*="horizontal"] {
    background-size: 100% 19%;
    /* The repeating background will create our striping appearance, since the size only stretches partially down the y-axis */ }
  [class^="striped-box"][class*="vertical"] {
    background-size: 19% 100%;
    background-image: linear-gradient(to right, #00f6ff 50%, #ffea00 0%); }
  [class^="striped-box"].toned {
    background-color: #00f6ff; }
    [class^="striped-box"].toned[class*="angle__30"] {
      background-image: repeating-linear-gradient(30deg, rgba(255, 255, 255, 0.33) 0%, rgba(255, 255, 255, 0.33) 15px, transparent 0, transparent 30px); }
  [class^="striped-box"][class*="angle__45"] {
    /**
     * For diagonal striping, the background-size will be the length
     * of the hypotenuse -- since within a square, the stripes will end as 45deg right triangles).
     *
     * To achieve our desired stripe width, a, we need to set the background size as 2a * sqrt(2)
     * ( because hypotenuse = sqrt(a^2 + b^2) === sqrt(2a^2) === a * sqrt(2) )
     *
     * So... for a 15px-width diagonal stripe...
     */
    background-size: 42.43px 42.43px;
    background-image: repeating-linear-gradient(45deg, #00f6ff 0%, #00f6ff 25%, #ffea00 0%, #ffea00 50%); }
  [class^="striped-box"][class*="angle__60"] {
    background-image: repeating-linear-gradient(60deg, #00f6ff, #00f6ff 12%, #ffea00, #ffea00 24%); }

[class^="striped-box_offset"] {
  background-image: linear-gradient(#00f6ff 30%, #ffea00 0%); }

[class^="striped-box_triple"] {
  background-size: 100% 40%;
  background-image: linear-gradient(#00f6ff 33.3%, #ffea00 66.6%, #ff6bce 0); }

/*# sourceMappingURL=striped-backgrounds.css.map */
